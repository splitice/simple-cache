name: build and test

on:
  push:
  schedule:
    - cron:  '*/5 * * * *'


jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: 
          - build: Release
            flags: ""
          - build: Debug
            flags: ""
          - build: Debug
            flags: "-DDB_ENABLE_COPY_ON_WRITE=false"
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build
      run: |
        make all CONFIG=${{ matrix.target.build }} CFLAGS="${{ matrix.target.flags }}"
    - name: Main tests
      run: |
        PWD=$(pwd)
        ./tests/${{ matrix.target.release }}/tests $PWD/src/server/scache $PWD/testcases/
      timeout-minutes: 2
    - name: valgrind test
      run: |
        PWD=$(pwd)
        sudo apt-get install valgrind
        valgrind --leak-check=full --show-leak-kinds=all ./tests/tests $PWD/src/server/scache $PWD/testcases/
    - name: Test rbuf sizes
      run: |
        cd tests
        for i in 1024 2048 4096 8192; do
          g++ -DDEBUG_BUILD -DBUFFER_SIZE=$i -I../src/core/ ../src/core/read_buffer.cpp test_rbuffer_standalone.cpp tests_rbuffer.cpp scenario.cpp
          echo "Testing $i rbuf"
          ./a.out
        done
    - name: Valgrind monitoring test
      run: |
        sudo mkdir -p /var/lib/scache/ &
        sudo apt-get install psmisc
        wait
        sudo chmod 0777 /var/lib/scache/ -R

        function query {
          sleep 2
          for i in {1..50}
          do
            curl 127.0.0.1:8082/conn &
          done

          sleep 110

          killall curl
        }

        query &

        timeout --kill-after=3 --preserve-status 2m valgrind --leak-check=full --show-leak-kinds=all src/server/scache -B 127.0.0.1:8082
